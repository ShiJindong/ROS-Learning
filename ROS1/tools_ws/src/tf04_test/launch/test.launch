<launch>
    <!-- 1. 启动乌龟GUI节点 -->
    <node pkg="turtlesim" type="turtlesim_node" name="turtle1" output="screen" />
    <node pkg="turtlesim" type="turtle_teleop_key" name="key" output="screen" />
    <!-- 2. 生成新的乌龟的节点 -->
    <node pkg="tf04_test" type="test01_new_turtle" name="turtle2" output="screen" />

    <!-- 3. 需要设置两个乌龟相对于世界坐标系的相对坐标关系发布 -->
    <!-- 
        基本实现思路:
            1. 节点只编写一个
            2. 这个节点需要启动两次
            3. 节点启动时动态传参: 第一次启动时传入turtle1, 第二次启动传入turtle2
        查看:
            运行launch文件后，可使用rosrun tf2_tools view_frames.py查看所有发布的动态tf消息
     -->
    <node pkg="tf04_test" type="test02_pub_turtle" name="pub1" args="turtle1" output="screen" />
    <node pkg="tf04_test" type="test02_pub_turtle" name="pub2" args="turtle2" output="screen" />

    <!-- 4. 需要编写节点，订阅 turtle1 和 turtle2 相对于世界坐标地的坐标消息，并转换成 turtle1 相对于 turtle2 的相对坐标变换关系 -->
    <node pkg="tf04_test" type="test03_control_turtle2" name="control" output="screen" />

</launch>